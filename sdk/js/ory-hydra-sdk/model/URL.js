/**
 * ORY Hydra - Cloud Native OAuth 2.0 and OpenID Connect Server
 * Welcome to the ORY Hydra HTTP API documentation. You will find documentation for all HTTP APIs here. Keep in mind that this document reflects the latest branch, always. Support for versioned documentation is coming in the future.
 *
 * OpenAPI spec version: Latest
 * Contact: hi@ory.am
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

;(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Userinfo'], factory)
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Userinfo'))
  } else {
    // Browser globals (root is window)
    if (!root.OryHydraCloudNativeOAuth20AndOpenIdConnectServer) {
      root.OryHydraCloudNativeOAuth20AndOpenIdConnectServer = {}
    }
    root.OryHydraCloudNativeOAuth20AndOpenIdConnectServer.URL = factory(
      root.OryHydraCloudNativeOAuth20AndOpenIdConnectServer.ApiClient,
      root.OryHydraCloudNativeOAuth20AndOpenIdConnectServer.Userinfo
    )
  }
})(this, function(ApiClient, Userinfo) {
  'use strict'

  /**
   * The URL model module.
   * @module model/URL
   * @version Latest
   */

  /**
   * Constructs a new <code>URL</code>.
   * The general form represented is:  [scheme:][//[userinfo@]host][/]path[?query][#fragment]  URLs that do not start with a slash after the scheme are interpreted as:  scheme:opaque[?query][#fragment]  Note that the Path field is stored in decoded form: /%47%6f%2f becomes /Go/. A consequence is that it is impossible to tell which slashes in the Path were slashes in the raw URL and which were %2f. This distinction is rarely important, but when it is, code must not use Path directly. The Parse function sets both Path and RawPath in the URL it returns, and URL&#39;s String method uses RawPath if it is a valid encoding of Path, by calling the EscapedPath method.
   * @alias module:model/URL
   * @class
   */
  var exports = function() {
    var _this = this
  }

  /**
   * Constructs a <code>URL</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/URL} obj Optional instance to populate.
   * @return {module:model/URL} The populated <code>URL</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports()

      if (data.hasOwnProperty('ForceQuery')) {
        obj['ForceQuery'] = ApiClient.convertToType(
          data['ForceQuery'],
          'Boolean'
        )
      }
      if (data.hasOwnProperty('Fragment')) {
        obj['Fragment'] = ApiClient.convertToType(data['Fragment'], 'String')
      }
      if (data.hasOwnProperty('Host')) {
        obj['Host'] = ApiClient.convertToType(data['Host'], 'String')
      }
      if (data.hasOwnProperty('Opaque')) {
        obj['Opaque'] = ApiClient.convertToType(data['Opaque'], 'String')
      }
      if (data.hasOwnProperty('Path')) {
        obj['Path'] = ApiClient.convertToType(data['Path'], 'String')
      }
      if (data.hasOwnProperty('RawPath')) {
        obj['RawPath'] = ApiClient.convertToType(data['RawPath'], 'String')
      }
      if (data.hasOwnProperty('RawQuery')) {
        obj['RawQuery'] = ApiClient.convertToType(data['RawQuery'], 'String')
      }
      if (data.hasOwnProperty('Scheme')) {
        obj['Scheme'] = ApiClient.convertToType(data['Scheme'], 'String')
      }
      if (data.hasOwnProperty('User')) {
        obj['User'] = Userinfo.constructFromObject(data['User'])
      }
    }
    return obj
  }

  /**
   * @member {Boolean} ForceQuery
   */
  exports.prototype['ForceQuery'] = undefined
  /**
   * @member {String} Fragment
   */
  exports.prototype['Fragment'] = undefined
  /**
   * @member {String} Host
   */
  exports.prototype['Host'] = undefined
  /**
   * @member {String} Opaque
   */
  exports.prototype['Opaque'] = undefined
  /**
   * @member {String} Path
   */
  exports.prototype['Path'] = undefined
  /**
   * @member {String} RawPath
   */
  exports.prototype['RawPath'] = undefined
  /**
   * @member {String} RawQuery
   */
  exports.prototype['RawQuery'] = undefined
  /**
   * @member {String} Scheme
   */
  exports.prototype['Scheme'] = undefined
  /**
   * @member {module:model/Userinfo} User
   */
  exports.prototype['User'] = undefined

  return exports
})
